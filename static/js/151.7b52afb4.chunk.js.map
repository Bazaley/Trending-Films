{"version":3,"file":"static/js/151.7b52afb4.chunk.js","mappings":"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","sources":["components/DescriptionMovie/Description.styled.js","components/DescriptionMovie/DescriptionMovie.jsx","components/AdditionalInformation/AdditionalInformation.styled.js","components/AdditionalInformation/AdditionalInformation.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/requestsForMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n\n  @media screen and (max-width: 767px) {\n    flex-wrap: wrap;\n  }\n`;\n\nexport const Img = styled.div`\n  width: 200px;\n\n  @media screen and (max-width: 767px) {\n    margin: 0 auto;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 100%;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 700px;\n  }\n`;\n\nexport const Description = styled.div`\n  padding: 20px 0 0 20px;\n`;\n\nexport const Paragraph = styled.p`\n  font-size: ${({ head }) => (head ? '17px' : '15px')};\n  font-weight: ${({ head }) => (head ? '700' : '400')};\n  color: white;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: ${({ head }) => (head ? '24px' : '18px')};\n\n    &:not(:last-child) {\n      margin-bottom: 20px;\n    }\n  }\n`;\n","import { Box, Img, Description, Paragraph } from './Description.styled';\n\nconst BASE_URL_IMAGE = 'https://image.tmdb.org/t/p/w500/';\n\nexport const DescriptionMovie = ({\n  movie: { poster_path, genres, title, release_date, vote_average, overview },\n}) => {\n  const genresNames = genres.map(({ name }) => name).join(',');\n\n  return (\n    <Box>\n      <Img>\n        <img src={`${BASE_URL_IMAGE}${poster_path}`} alt=\"\" />\n      </Img>\n\n      <Description>\n        <Paragraph head>\n          {title} ({release_date.slice(0, 4)})\n        </Paragraph>\n        <Paragraph>Рейтинг: {Math.round(vote_average * 10)}%</Paragraph>\n        <Paragraph head>Обзор</Paragraph>\n        <Paragraph>{overview}</Paragraph>\n        <Paragraph head>Жанры</Paragraph>\n        <Paragraph>{genresNames}</Paragraph>\n      </Description>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Paragraph = styled.p`\n  margin-bottom: 20px;\n  font-size: 21px;\n  font-weight: 500;\n  text-align: center;\n  color: white;\n`;\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 50px;\n  padding: 10px;\n  border-top: 2px solid gray;\n  border-bottom: 2px solid gray;\n\n  @media screen and (min-width: 768px) {\n    padding: 30px;\n  }\n`;\n\nexport const Span = styled.span`\n  margin-right: 5px;\n\n  @media screen and (min-width: 768px) {\n    margin-right: 10px;\n  }\n`;\nexport const NavLinkStyled = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  font-size: 15px;\n  font-weight: 500;\n  color: white;\n  text-decoration: none;\n\n  &.active {\n    color: #e1900e;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    font-weight: 700;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { MdOutlineReviews, MdOutlineCastConnected } from 'react-icons/md';\nimport { GiFilmStrip } from 'react-icons/gi';\nimport { animateScroll as scroll } from 'react-scroll';\nimport { NavLinkStyled, List, Span } from './AdditionalInformation.styled';\n\nexport const AdditionalInformation = () => {\n  const location = useLocation();\n\n  return (\n    <List>\n      <li>\n        <NavLinkStyled\n          onClick={() => scroll.scrollTo(650)}\n          to=\"cast\"\n          state={{ from: location?.state?.from }}\n        >\n          <Span>В ролях</Span>\n          <MdOutlineCastConnected />\n        </NavLinkStyled>\n      </li>\n      <li>\n        <NavLinkStyled\n          onClick={() => scroll.scrollTo(650)}\n          to=\"reviews\"\n          state={{ from: location?.state?.from }}\n        >\n          <Span>Обзор</Span>\n          <MdOutlineReviews />\n        </NavLinkStyled>\n      </li>\n      <li>\n        <NavLinkStyled\n          onClick={() => scroll.scrollTo(650)}\n          to=\"trailer\"\n          state={{ from: location?.state?.from }}\n        >\n          <Span>Трейлер</Span>\n          <GiFilmStrip />\n        </NavLinkStyled>\n      </li>\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const LinkStyled = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: 30px;\n  margin-bottom: 20px;\n  border-radius: 4px;\n  background-color: #b47b20;\n  text-decoration: none;\n  color: white;\n  text-transform: uppercase;\n`;\n\nexport const Paragraph = styled.p`\n  margin-bottom: 50px;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 700;\n  color: #e1900e;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { fetchMovieById } from 'services/requestsForMovies';\nimport { DescriptionMovie } from 'components/DescriptionMovie/DescriptionMovie';\nimport { AdditionalInformation } from 'components/AdditionalInformation/AdditionalInformation';\nimport { LinkStyled, Paragraph } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetch = async () => {\n      const { data } = await fetchMovieById(movieId);\n\n      setMovie(data);\n    };\n    fetch();\n  }, [movieId]);\n  return (\n    <>\n      {movie && (\n        <>\n          <LinkStyled to={location?.state?.from}>\n            <AiOutlineArrowLeft />\n            Назад\n          </LinkStyled>\n\n          <DescriptionMovie movie={movie} />\n          <AdditionalInformation />\n          <Suspense\n            fallback={\n              <>\n                <Paragraph>Пожалуйста подождите...</Paragraph>\n                <ThreeCircles\n                  height=\"100\"\n                  width=\"100\"\n                  color=\"#e1900e\"\n                  wrapperStyle={{ justifyContent: 'center' }}\n                  wrapperClass=\"\"\n                  visible={true}\n                  ariaLabel=\"three-circles-rotating\"\n                  outerCircleColor=\"\"\n                  innerCircleColor=\"\"\n                  middleCircleColor=\"\"\n                />\n              </>\n            }\n          >\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '4f349eaa26ab680508bb40abbe6da2af';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async page => {\n  return await axios.get('/trending/movie/day?language=ru', {\n    params: {\n      api_key: API_KEY,\n      page,\n    },\n  });\n};\n\nexport const fetchMovieById = async movieId => {\n  return await axios.get(`movie/${movieId}?language=ru`, {\n    params: {\n      api_key: API_KEY,\n      append_to_response: 'videos',\n    },\n  });\n};\n\nexport const fetchCast = async movieId => {\n  return await axios.get(`movie/${movieId}/credits?language=ru`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchMovieReviews = async movieId => {\n  return await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchMovieBySearchQuery = async (query, page) => {\n  return await axios.get('search/movie?language=ru', {\n    params: {\n      api_key: API_KEY,\n      query,\n      page,\n    },\n  });\n};\n"],"names":["Box","styled","Img","Description","Paragraph","head","DescriptionMovie","movie","poster_path","genres","title","release_date","vote_average","overview","genresNames","map","name","join","src","alt","slice","Math","round","List","Span","NavLinkStyled","NavLink","AdditionalInformation","location","useLocation","onClick","scroll","to","state","from","LinkStyled","Link","useState","setMovie","movieId","useParams","useEffect","fetch","fetchMovieById","data","Suspense","fallback","height","width","color","wrapperStyle","justifyContent","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","API_KEY","axios","fetchTrendingMovies","page","params","api_key","append_to_response","fetchCast","fetchMovieReviews","fetchMovieBySearchQuery","query"],"sourceRoot":""}